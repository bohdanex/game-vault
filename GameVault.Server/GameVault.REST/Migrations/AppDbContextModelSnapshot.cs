// <auto-generated />
using System;
using GameVault.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameVault.REST.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameVault.ObjectModel.Entities.SteamGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("OurPriceInUSD")
                        .HasColumnType("float");

                    b.Property<int>("SteamAppId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SteamGames");
                });

            modelBuilder.Entity("GameVault.ObjectModel.Entities.SteamGameKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BuyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SteamGameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SteamGameId");

                    b.ToTable("SteamGameKeys");
                });

            modelBuilder.Entity("GameVault.ObjectModel.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaltedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GameVault.ObjectModel.Entities.SteamGameKey", b =>
                {
                    b.HasOne("GameVault.ObjectModel.Entities.User", "Owner")
                        .WithMany("BoughtKeys")
                        .HasForeignKey("OwnerId");

                    b.HasOne("GameVault.ObjectModel.Entities.SteamGame", "SteamGame")
                        .WithMany()
                        .HasForeignKey("SteamGameId");

                    b.Navigation("Owner");

                    b.Navigation("SteamGame");
                });

            modelBuilder.Entity("GameVault.ObjectModel.Entities.User", b =>
                {
                    b.Navigation("BoughtKeys");
                });
#pragma warning restore 612, 618
        }
    }
}
